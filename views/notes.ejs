<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
    <style>
      body {
        font-family: Arial, sans-serif;
        margin: 0;
        padding: 0;
        background-color: #f0f0f0;
        display: flex;
        justify-content: center;
        flex-direction: column;
        align-items: center;
        text-align: center;
      }
      h1 {
        color: #333;
        margin-bottom: 20px;
      }
      #postForm {
        display: flex;
        flex-direction: column;
        align-items: center;
        margin-bottom: 20px;
      }
      #postInput {
        width: 300px;
        padding: 10px;
        border: 2px solid #ccc;
        border-radius: 5px;
        margin-bottom: 10px;
        box-sizing: border-box;
        font-size: 16px;
      }
      button {
        padding: 5px 10px;
        border: none;
        border-radius: 5px;
        background-color: #007bff;
        color: white;
        font-size: 16px;
        cursor: pointer;
        transition: background-color 0.3s ease;
      }
      button:hover {
        background-color: #0056b3;
      }
      .container {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 10px;
      }
      .box {
        height: 100px;
        width: 400px;
        background-color: #ff6f61;
        color: white;
        margin-top: 10px;
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        display: flex;
        align-items: center;
        flex-direction: column;
        justify-content: center;
        text-align: center;
      }
      .button_div {
        display: flex;
        justify-content: space-around;
        width: 100%;
      }
    </style>
  </head>
  <body>
    <h1>Hello, what's on your mind?</h1>
    <p id="user_email"><%=email%></p>
    <form id="postForm">
      <input type="text" name="post" id="postInput" placeholder="Type something..." />
      <button type="submit">Submit</button>
    </form>
    <div class="container"></div>

    <script>
      var email = document.querySelector("#user_email").textContent;

      document.getElementById("postForm").addEventListener("submit", submit_post);

      async function submit_post(event) {
        event.preventDefault();

        const postInput = document.getElementById("postInput");
        const postText = postInput.value.trim();

        if (!postText) return; 

        const box = document.createElement("div");
        const post = document.createElement("p");
        const button_div = document.createElement("div");
        const editbutton = document.createElement("button");
        const deletebutton = document.createElement("button");

        editbutton.textContent = "Edit";
        deletebutton.textContent = "Delete";
        button_div.classList.add("button_div");
        button_div.appendChild(editbutton);
        button_div.appendChild(deletebutton);
        box.classList.add("box");

        post.textContent = postText;
        box.appendChild(post);
        box.appendChild(button_div);
        document.querySelector(".container").appendChild(box);

        postInput.value = "";

        try {
          await fetch("http://localhost:4000/submit_note", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ new_post: postText, email }),
          });
        } catch (err) {
          console.error("Error submitting post:", err);
        }

        deletebutton.addEventListener("click", () => delete_post(box, postText));
        editbutton.addEventListener("click", () => {
          const newPostText = prompt("Enter new post:");
          if (newPostText) {
            edit_post(postText, newPostText, email).then(() => {
              post.textContent = newPostText;
            });
          }
        });
      }

      async function delete_post(boxElement, postText) {
        try {
          await fetch("http://localhost:4000/delete_post", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ user_post: postText, email }),
          });
          boxElement.remove(); 
        } catch (err) {
          console.error("Error deleting post:", err);
        }
      }

      async function edit_post(oldPostText, newPostText, email) {
        try {
          await fetch("http://localhost:4000/edit_post", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ post: oldPostText, newpost: newPostText, email }),
          });
        } catch (err) {
          console.error("Error editing post:", err);
        }
      }

      async function get_data() {
        try {
          const response = await fetch("/get_data");
          return await response.json();
        } catch (err) {
          console.error("Failed to fetch data:", err);
        }
      }

      async function display_post() {
        const data = await get_data();
        if (!data) return;

        const userPosts = data.filter(item => item.email === email);

        userPosts.forEach(item => {
          const post_div = document.createElement("div");
          const post = document.createElement("p");
          const button_div = document.createElement("div");
          const editbutton = document.createElement("button");
          const deletebutton = document.createElement("button");

          editbutton.textContent = "Edit";
          deletebutton.textContent = "Delete";
          button_div.classList.add("button_div");
          button_div.appendChild(editbutton);
          button_div.appendChild(deletebutton);
          post_div.classList.add("box");

          post.textContent = item.post;
          post_div.appendChild(post);
          post_div.appendChild(button_div);
          document.querySelector(".container").appendChild(post_div);

          deletebutton.addEventListener("click", () => delete_post(post_div, item.post));
          editbutton.addEventListener("click", () => {
            const newPostText = prompt("Enter new post:");
            if (newPostText) {
              edit_post(item.post, newPostText, email).then(() => {
                post.textContent = newPostText;
              });
            }
          });
        });
      }

      display_post();
    </script>
  </body>
</html>
